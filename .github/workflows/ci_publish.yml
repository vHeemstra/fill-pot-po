name: CI - Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  publish-n-release:
    name: Publish to NPM and create GitHub release
    # if: |
    #   startsWith(github.event.head_commit.message, 'Major release v') ||
    #   startsWith(github.event.head_commit.message, 'Minor release v') ||
    #   startsWith(github.event.head_commit.message, 'Patch release v')
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - name: Get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Get clean version
        id: get-clean-verion
        env:
          CUSTOM_VERSION: ${{ steps.package-version.outputs.current-version }}
        run: |
          shopt -s extglob
          echo "::set-output name=clean-version::${CUSTOM_VERSION/%+(.0)/}\n"
      - run: echo "publish v${{ steps.get-clean-verion.outputs.clean-version }}"

      # - run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Create GitHub release
      #   run: gh release create v${{ steps.package-version.outputs.current-version }} --generate-notes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Create GitHub release
      #   run: gh release create v${{ steps.get-clean-verion.outputs.clean-version }} --generate-notes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
